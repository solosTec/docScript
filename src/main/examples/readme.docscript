;.meta(title:README, author:'solosTec', released:.now(), language:'en', outline:'Introduction into the DocScript document generator')
.meta(title:README, author:'solosTec', released:@2019-08-02, language:'en', outline:'Introduction into the DocScript document generator')
.set(name:docc, language:C++)

;
; Overview
;
.h1 Overview

Generate HTML, Markdown and .symbol(LaTeX) files from one single source file written in .i docScript. 
.get(name) is a compiler for the docScript language to generate documents. It is positioned between Markdown and LaTex. 

.h2 Features

Since you have one source file for different target formats, you don't have to memorize all the tiny syntactic quirks of LaTeX, Markdown or HTML.

.list(type:ordered
 , style: 'lower-roman'
 , items: [
	(syntax as .b simple as markdown, but with more features),
	(docScript - allows to .b program your document (Turing complete)),
	(documents can be compiled from different sources),
	(generate compact HTML files with .b(inline images)),
	(.b(UTF-8) support),
	(pretty fast),
	(auto generate numbering),
	(auto generate meta data),
	(.b(pre-rendering) of other sources - e.g. binary data as hexdump),
	(comprehensive error messages),
	(hackable)
 ])

;
; Toolchain, platforms
;
.h1 Usage
.h2 Building

Dependencies:

.list(type:unordered
 , style: 'circle'
 , items: [
	(CMake >= 3.13),	
	(recent C++ compiler),
	(Boost > 1.67), 
	(OpenSSL), 
	(.link(text:'CYNG', url:'https://github.com/solosTec/cyng', title:'VM with dynamic data types') library),
	(.link(text:'NODE', url:'https://github.com/solosTec/node', title:'SMF') library)
	])

.h3(Linux)

.code(language:sh, caption:'Linux build', source:'build-linux.txt', linenumbers:false)

.h3(Windows)

.code(language:cmd, caption:'Windows build', source:'build-windows.txt', linenumbers:none)

.h2(Usage)

.code(language:verbatim, caption:'Help', source:'help.txt', linenumbers:false)

;
; short introduction into docScript
;
.h1 DocScript

Writing in .i docScript is as simple as Markdown but with a more formalized syntax. One of the main objectives of .i docScript
is to make as less syntactic noise as possible. It exploits the fact, that a word never starts with a dot. So every literal
that starts with a dot is a potential docScript keyword. In case you really want a word with leading point, simply write two consecutive points.
This is possible since the dot is also the escape sign.

.h2(Special Characters)

.def(dot:'.', 'round brackets':"()", colon:":", 'square backets':"[]")

That's all. 

.h2(Specify a datetime)

To specify a datetime the '@' symbol can be used followed by a string according to RFC 3339.

Datetimes can be used as parameters and as part of an paragraph.

;@2022-10-02T15:00:00.05Z

Example (1): '@2022-10-02' => .b(@2022-10-02)

Example (2): '@2022-10-02T10:00:02' => .b(@2022-10-02T10:00:02)


.h2(Basic Rules)

To create a paragraph, just write text that follows an empty line. To separate paragraphs, insert a .b blank line.

To avoid any processing put your text into ''single quotation '' marks. 


.h2(Parameters)

Parameters can be a simple list of words, numbers and symbols or key value pairs separated by a comma. Key value pairs consist of a key and a value
separated by colon: .b('key:value'). Values can be the results of a function call, but keys cannot.

.h2(Commands)

Commands start with a dot. If the command has only one parameter no brackets are required. In case the command has no parameters
an opening and closing bracket without contents is necessary.

Example: .b '.now()'

.h3(Formatting)

.h4(bold)

Example: '.b bold' => .b bold

.h4(italic)

Example: '.i(emphasized)' => .i(emphasized)

.h4(sup, sub)

Super and subscript are not supported by Github Markdown.

Example: '.sup(sup) X .sub(sub)' => .sup(sup) X .sub(sub)

.h4(color)

Colors are not supported by Markdown. 

.h3(Header)

A header has the following options:

.def(level:"indentation depth", 
	title:"caption title", 
	tag:"unique identifier")

Example:

.code(language:docscript, caption:'Header', source:'inc/example-header.docscript', linenumbers:true)

To simplify writing headers the shortcuts .b h1 up to .b h6 are predefined.

.h3(Lists)

A list has the following options:

.def(type:"available options are ordered and unordered", 
	style:"list style", 
	items:"a list of items as [vector]")

Example:

.code(language:docscript, caption:'Header', source:'inc/example-list.docscript', linenumbers:true)

;.include(inc/example-list.docscript)
.list(type:unordered
 , style: 'circle'
 , items: [
	(CMake >= 3.13),	
	(recent C++ compiler),
	(Boost > 1.67), 
	(OpenSSL), 
	(.link(text:'cyng', url:'https://github.com/solosTec/cyng', title:'VM with dynamic data types') library)])


.h3(Definitions)

Example:

.code(language:docscript, caption:'Definitions', source:'inc/example-def.docscript', linenumbers:true)

.h3(Code Listings)

The command is .b '.code'. A listing has the following options:

.def(caption:"Optional title", 
	line_numbers:"[bool] print line numbers", 
	source:"source file",
	language:"programming language")

The following languages are strongly supported:

.list(type:unordered
 , style: 'circle'
 , items: [
	(C++),	
	(JSON),
	(txt), 
	(binary data as hexdump), 
	(docScript)])

In case of doubt choose .i txt format.

.h3(Link)

.def(title:"optional tooltip", 
	url:"URL that the hyperlink points to", 
	text:"Text to display")

.h3(Figure)

The specified image will be embedded into the HTML file as base64 encoded string.

.def(alt:"alternative text", 
	caption:"Title below the image", 
	source:"path of source/image file",
	tag:"label")


.h3(Quote)

.def(cite:"text below the quote", 
	source:"source of quote", 
	quote:"the quote itself")

.h3(Note)

The .b '.note' command generates a side note. LaTeX uses the \marginpar{} command. HTML mimics the behaviour with 
an absolut position. Markdown simulates this by a blockquote.

.note(This is a marginal note.)

.h3(Abstract)

The specified image will be embedded into the HTML file as base64 encoded string.

.def(title:"Title of abstract", 
	text:"The statement")


.h3(Tables)

Tables are created from CSV files.

.def(source:"path to CSV file",
	header:"overwrite header from CSV file",
	title:"table title")

Values are separated by ',' or ';'

Example:

.code(language:docscript, caption:'Tables', source:'inc/example-table.docscript', linenumbers:true)

.table(source:'inc/table.csv', header:"uuid string int", title:'Caption')

.h3(Symbols)

The following symbols are pre-defined:

.list(type:unordered
 , style: 'circle'
 , items: [
	(pilcrow: .symbol(pilcrow)),	
	(copyright: .symbol(copyright)),
	(registered: .symbol(registered)),
	(latex: .symbol(latex)),
	(celsius: .symbol(celsius)),
	(micro: .symbol(micro)),
	(ohm: .symbol(ohm)),
	(degree: .symbol(degree)),
	(promille: .symbol(promille)),
	(lambda: .symbol(lambda)),
	(ellipsis: .symbol(ellipsis))
	])

Example: .b '.symbol(lambda)'

.h3(Currency)

The following currencies are pre-defined:

.list(type:unordered
 , style: 'circle'
 , items: [
	(euro: .currency(euro)),	
	(yen: .currency(yen)),
	(pound: .currency(pound)),
	(rupee: .currency(rupee)),
	(sheqel: .currency(sheqel))
	])

.h3(Set)

Define one or more variables.

Example: 

.code(language:docscript, caption:'Set', source:'inc/example-set.docscript', linenumbers:true)

.h3(Get)

Get value of a variable.

Example: 

.code(language:docscript, caption:'Get', source:'inc/example-get.docscript', linenumbers:true)


.h3(Meta)

Define a set of document meta data.

Example: .b '.meta(title:readme, author:solosTec)'

.h3(Generator Functions)
.h4(tag)

Generates a random .link(text: 'uuid'
              , title: 'Universally Unique Identifier'
              , url: 'https://de.wikipedia.org/wiki/Universally_Unique_Identifier').

Example: 

.code(language:docscript, caption:'Generator: Tag', source:'inc/example-tag.docscript', linenumbers:true)
